// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id          Int      @id @default(autoincrement())
  
  fullName    String?
  email       String   @unique
  password    String
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}


model Category {
  id          Int      @id @default(autoincrement())
  
  name        String   @unique
  products    Product[]
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}


model Product {
  id          Int @id @default(autoincrement())
  
  name        String
  imageUrl    String

  ingredients Ingradient[]
  
  options     ProductOption[]
  
  categoryId  Int 
  category    Category @relation(fields: [categoryId], references: [id])
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}


model ProductOption {
  id          Int @id @default(autoincrement())
  
  size        Int?
  price       Int
  pizzaType   Int?

  productId   Int
  product     Product @relation(fields: [productId], references: [id])  
}


model Ingradient {
  id          Int      @id @default(autoincrement())
  
  name        String   @unique
  price       Int
  imageUrl    String
  
  products    Product[]

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}